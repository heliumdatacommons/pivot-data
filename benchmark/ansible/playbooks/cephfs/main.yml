- hosts: "{{ fs }}"
  gather_facts: false
  become: true
  tasks:
    - name: Install Ceph
      apt:
        name: ceph-base
        update_cache: true
        autoremove: true

    - name: Load Ceph kernel module
      modprobe:
        name: ceph
        state: present

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        recurse: true
      with_items:
      - /opt/ceph/etc
      - /opt/ceph/var/lib/bootstrap-osd

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Assign host(s) to the Ceph monitor group
      add_host:
        hostname: "{{ item }}"
        groupname: ceph-mon
      with_items: "{{ groups[fs][:options.cephfs.mon_group_size] }}"

    - name: Assign host(s) to the CephFS group
      add_host:
        hostname: "{{ item }}"
        groupname: ceph-mds
      with_items: "{{ groups[fs][:options.cephfs.mds_group_size] }}"

- hosts: ceph-mon
  become: true
  tasks:
    - name: Create Ceph configuration file
      template:
        src: ceph.conf.mon.j2
        dest: /opt/ceph/etc/ceph.conf

    - name: Run Ceph Monitor
      docker_container:
        name: ceph-mon
        image: "{{ options.cephfs.daemon_image }}"
        network_mode: host
        command: mon
        volumes:
          - /opt/ceph/etc:/etc/ceph
          - /opt/ceph/var/lib:/var/lib/ceph/
        env:
          MON_IP: "{{ ansible_default_ipv4.address }}"
          CEPH_PUBLIC_NETWORK: "{{ supernet }}"

    - name: Run Ceph Manager
      docker_container:
        name: ceph-mgr
        image: "{{ options.cephfs.daemon_image }}"
        network_mode: host
        command: mgr
        volumes:
          - /opt/ceph/etc:/etc/ceph
          - /opt/ceph/var/lib:/var/lib/ceph/

- hosts: cephfs
  become: true
  tasks:
    - name: Create Ceph configuration file
      template:
        src: ceph.conf.osd.j2
        dest: "{{ item }}"
        force: false
      with_items:
        - /opt/ceph/etc/ceph.conf
        - /etc/ceph/ceph.conf

    - name: Create an empty keyring file as placeholder
      file:
        path: /opt/ceph/var/lib/bootstrap-osd/ceph.keyring
        state: touch

    - name: Find attached block devices
      shell: >
        lsblk -J | jq '.blockdevices[]
        | select(.type == "disk")
        | select(.name != "sda")
        | .name' | sed 's/"//g'
      register: block_devices

    - name: Zap block devices
      docker_container:
        name: ceph-zap-device
        image: "{{ options.cephfs.daemon_image }}"
        command: zap_device
        privileged: true
        auto_remove: true
        volumes:
          - /dev:/dev
        env:
          OSD_DEVICE: /dev/{{ item }}
      with_items: "{{ block_devices.stdout_lines }}"
      ignore_errors: true

    - name: Run Ceph OSD
      docker_container:
        name: ceph-osd-{{ item }}
        image: "{{ options.cephfs.daemon_image }}"
        network_mode: host
        pid_mode: host
        privileged: true
        command: osd
        volumes:
          - /opt/ceph/etc:/etc/ceph
          - /opt/ceph/var/lib:/var/lib/ceph/
          - /dev:/dev
        env:
          OSD_DEVICE: /dev/{{ item }}
      with_items: "{{ block_devices.stdout_lines }}"

- hosts: ceph-mds
  gather_facts: false
  become: true
  tasks:
    - name: Run CephFS
      docker_container:
        name: cephfs-{{ options.cephfs.name }}
        image: "{{ options.cephfs.daemon_image }}"
        network_mode: host
        privileged: true
        command: mds
        volumes:
          - /opt/ceph/etc:/etc/ceph
          - /opt/ceph/var/lib:/var/lib/ceph/
        env:
          CEPHFS_CREATE: 1
          CEPHFS_NAME: "{{ options.cephfs.name }}"







