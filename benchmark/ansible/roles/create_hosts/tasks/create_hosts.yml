- name: Create boot disk(s) for host(s) at {{ _zone.name }}
  gce_pd:
    name: benchmark-{{ _zone.name }}-{{ fs }}-{{ item }}-{{ disks.0.name }}
    zone: "{{ _zone.name }}"
    disk_type: "{{ disks.0.type }}"
    size_gb: "{{ disks.0.size }}"
    image: "{{ image }}"
    mode: "{{ disks.0.mode }}"
    state: active
  when: not running
  with_sequence: start={{ _zone.start }} end={{ _zone.end }}
  register: _create_boot_disk
  async: 600
  poll: 0

- name: Wait for boot disk creation to finish
  async_status:
    jid: "{{ item.ansible_job_id }}"
  when: not running
  register: _boot_disk
  until: _boot_disk.finished
  with_items: "{{ _create_boot_disk.results }}"
  delay: 6
  retries: 10

- name: Create {{ _zone.end - _zone.start + 1 }} host(s) at {{ _zone.name }}
  gce:
    name: benchmark-{{ _zone.name }}-{{ fs }}-{{ item }}
    zone: "{{ _zone.name }}"
    machine_type: "{{ machine_type }}"
    network: "{{ project }}-vpc-{{ _zone.name.split('-')[:2] | join('-') }}"
    subnetwork: "{{ project }}-subnet-{{ _zone.name.split('-')[:2] | join('-') }}"
    state: active
    preemptible: "{{ preemptible }}"
    metadata:
      block-project-ssh-keys: true
      ssh-keys: "{{ ansible_ssh_user }}:{{ lookup('file', ansible_ssh_public_key_file) }}"
    disk_auto_delete: "{{ disks.0.delete_on_termination }}"
    disks:
      - name: benchmark-{{ _zone.name }}-{{ fs }}-{{ item }}-{{ disks.0.name }}
        mode: READ_WRITE
  register: _created_instances
  with_sequence: start={{ _zone.start }} end={{ _zone.end }}
  async: 600
  poll: 0

- name: Wait for host creation to finish
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: hosts
  until: hosts.finished
  with_items: "{{ _created_instances.results }}"
  delay: 6
  retries: 100

- name: Assign hosts to the server/client group
  add_host:
    hostname: "{{ item.1.public_ip }}"
    groupname: "{{ mode }}"
  with_subelements:
    - "{{ hosts.results }}"
    - instance_data

- name: Assign hosts to the FS group
  add_host:
    hostname: "{{ item.1.public_ip }}"
    groupname: "{{ fs }}"
  with_subelements:
    - "{{ hosts.results }}"
    - instance_data

- include_tasks: create_attached_disks.yml
  with_sequence: start={{ _zone.start }} end={{ _zone.end }}
  when: not running
  loop_control:
    loop_var: _seq